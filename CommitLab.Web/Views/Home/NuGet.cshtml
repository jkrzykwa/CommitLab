@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-xs-12">
        <div class="row">
            <div class="col-sm-8 col-xs-10" style="margin-top:50px">
                <div class="input-group" style="padding-left:15px">
                    <input id="nuGetSearchPlaceholder" type="text" class="form-control" data-bind="textInput: searchPackageName" placeholder="Search for...">
                    <span class="input-group-btn">
                        <button id="submitData" class="btn btn-default" type="button" data-bind="click: function(){getChangesets()}">Search</button>
                    </span>
                </div><!-- /input-group -->
            </div>
        </div>
        <div class="col-xs-12">
            <div class="row">
                <div class="col-xs-6">
                    <span class="form-group" id="wrongNameInfo" style="color:red; font-size:16px;"></span>
                </div>
            </div>
        </div>
        <div class="col-xs-12">
            <div class="row" style="margin-top:50px">
                <div class="col-xs-5">
                    <h1><span id="labelPackageName">Package name</span></h1>
                </div>
                <div class="col-xs-6 col-xs-offset-1">
                        <h3>Last Published</h3>
                        <h4><span id="labelPackagePublished"></span></h4>
                </div>
            </div>
        </div>
        <div id="NuGetGridData">
            <div class="col-xs-12">
                <div class="row">
                    <div class="col-xs-12 gridPadding">
                        <div id="topGrid" class="gridStyle gridStyle-responsive-nuget" style="position:relative;margin-top:60px; min-height:300px" data-bind="koGrid: gridNuGet">
                            <span id="loading" class="fa fa-spin fa-spinner fa-lg hidden" style="position:absolute;z-index:999;top:50%;right:50%">
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <h2 style="margin-bottom:10px">Dependencies</h2>

                        <span id="loadingDependencies" class="fa fa-spin fa-spinner fa-lg hidden" style="margin-top:20px"></span>



                        <h4 id="labelDependencies"></h4>
                    </div>
                </div>
                <div class="row" style="margin-top:40px">
                    <div class="col-xs-12">
                        <h2>Used by</h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 gridPadding">
                        <div id="bottomGrid" class="gridStyle gridStyle-responsive-nuget" style="position:relative;margin-top:10px; min-height:500px" data-bind="koGrid: gridNuGetAll">
                           <span id="loadingBottom" class="fa fa-spin fa-spinner fa-lg hidden" style="position:absolute;z-index:999;top:50%;right:50%">
                          </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script type="text/javascript"> 
 
    function StartLoading(name1, name2){
        document.getElementById(name1).className = "fa fa-spin fa-spinner fa-lg";

        if (name2 != null) {
            document.getElementById(name2).style.color = "darkgrey";
        }
    }
    function StopLoading(name1, name2) {
        document.getElementById(name1).className = "fa fa-spin fa-spinner fa-lg hidden";

        if (name2 != null) {
            document.getElementById(name2).style.color = "";
        }
    }
</script>












   @section scripts
{


<script type="text/javascript">


    var viewModel = function(){
        var that = this;
        searchPackageName = ko.observable("");        // Initially blank

        var _this = this;
        Changesets = ko.observableArray([]);
        ChangesetsAll = ko.observableArray([]);

        gridNuGet = {
            data: Changesets,
            showGroupPanel: true,
            columnDefs: [{ field: 'Id', displayName: 'Package Name'},
                { field: 'Version', displayName: 'Version' },
                { field: 'Published', displayName: 'Last Published',
                },
            ]
        };

        gridNuGetAll = {
            data: ChangesetsAll,
            showGroupPanel: true,
            columnDefs: [{ field: 'Id', displayName: 'Package Name' },
                { field: 'Version', displayName: 'Version' },
                { field: 'vSpec', displayName: 'Use searched package version' },
            ]
        };

        getDependencies = function () {
            if (searchPackageName != "") {

                var path = GetChangedUriInfo();
                StartLoading("loadingDependencies", null);
                $('#labelDependencies').empty();
                $.ajax({
                    type: 'POST',
                    async: true,
                    contentType: 'application/json',
                    url: path + 'GetPackages/SinglePackageDependencies',
                    data: JSON.stringify({ name: ko.toJS(searchPackageName) }),
                }).done(function (data) {
                    var content = "<table>"
                    if (data[0] == null) {
                        content += '<tr><td>' + "No packages" + '</td></tr>';
                    } else {
                        for (var i = 0; data[i] != null; i++) {
                            content += '<tr><td>' + data[i] + '</td></tr>';
                        }
                    }
                    content += "</table>"
                    StopLoading("loadingDependencies", null);
                    $('#labelDependencies').append(content);
                });
                
            }
        }

        getChangesetsAll = function () {
            if (searchPackageName != "") {

                var path = GetChangedUriInfo();
                StartLoading("loadingBottom", "bottomGrid");
                $.ajax({
                    type: 'POST',
                    async: true,
                    contentType: 'application/json',
                    url: path + 'GetPackages/AllPackages',
                    data: JSON.stringify({ name: ko.toJS(searchPackageName) }),
                }).done(function (data) {
                    //ChangesetsAll.removeAll();
                    ChangesetsAll(data);

                    StopLoading("loadingBottom", "bottomGrid");
                });

            }
        }

        getChangesets = function()
        {
            document.getElementById("wrongNameInfo").textContent = "";
            var path = GetChangedUriInfo();
            StartLoading("loading", "topGrid");
            $.ajax({
                type: 'POST',
                async: true,
                contentType: 'application/json',
                url: path + 'GetPackages/SinglePackage',
                data: JSON.stringify({ name: ko.toJS(searchPackageName) }),
            }).done(function (data) {
                Changesets.removeAll();
                if (data[0] == null){
                    document.getElementById("wrongNameInfo").textContent = "Sorry, package doesn't exist.";//("//alert("Przykro mi, taka paczka nie istnieje");
                    document.getElementById("labelPackageName").textContent = "Package Name";
                    document.getElementById("labelPackagePublished").textContent = "";
                    ChangesetsAll.removeAll();
                }
                else {                     
                    document.getElementById("labelPackageName").textContent = data[0].Id + " " + data[0].Version;
                    document.getElementById("labelPackagePublished").textContent = data[0].Published;

                    Changesets(data);
                    getDependencies();
                    getChangesetsAll();
                }
                StopLoading("loading", "topGrid");
            });

        }


    };
    ko.applyBindings(viewModel);



</script>



}
   